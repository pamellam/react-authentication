{"ast":null,"code":"var _jsxFileName = \"/Users/pamelamladenova/Documents/authentication/frontend/src/pages/Authentication.js\";\nimport { useSearchParams, json } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AuthenticationPage() {\n  return /*#__PURE__*/_jsxDEV(AuthForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = AuthenticationPage;\nexport default AuthenticationPage;\n\n//\nexport async function action({\n  request\n}) {\n  //\n  const searchParams = new URL(request.url).searchParams.set('mode', 'login');\n  const mode = searchParams.get('mode') || 'login';\n  if (mode !== 'login' && mode !== 'signup') {\n    throw json({\n      message: 'Unsupported authentication mode.'\n    }, {\n      status: 442\n    });\n  }\n  const data = request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password')\n  };\n  const response = await fetch('http://localhost:8080/' + mode, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(authData)\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"AuthenticationPage\");","map":{"version":3,"names":["useSearchParams","json","AuthForm","jsxDEV","_jsxDEV","AuthenticationPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","searchParams","URL","url","set","mode","get","message","status","data","formData","authData","email","password","response","fetch","method","headers","body","JSON","stringify","$RefreshReg$"],"sources":["/Users/pamelamladenova/Documents/authentication/frontend/src/pages/Authentication.js"],"sourcesContent":["import { useSearchParams, json } from 'react-router-dom';\nimport AuthForm from '../components/AuthForm';\n\nfunction AuthenticationPage() {\n  return <AuthForm />;\n}\n\nexport default AuthenticationPage;\n\n//\nexport async function action({ request }) {\n  //\n  const searchParams = new URL(request.url).searchParams.set('mode', 'login');\n  const mode = searchParams.get('mode') || 'login';\n\n  if (mode !== 'login' && mode !== 'signup') {\n    throw json(\n      { message: 'Unsupported authentication mode.' },\n      { status: 442 }\n    );\n  }\n\n  const data = request.formData();\n  const authData = {\n    email: data.get('email'),\n    password: data.get('password'),\n  };\n\n  const response = await fetch('http://localhost:8080/' + mode, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(authData),\n  });\n\n  \n}\n"],"mappings":";AAAA,SAASA,eAAe,EAAEC,IAAI,QAAQ,kBAAkB;AACxD,OAAOC,QAAQ,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,kBAAkBA,CAAA,EAAG;EAC5B,oBAAOD,OAAA,CAACF,QAAQ;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACrB;AAACC,EAAA,GAFQL,kBAAkB;AAI3B,eAAeA,kBAAkB;;AAEjC;AACA,OAAO,eAAeM,MAAMA,CAAC;EAAEC;AAAQ,CAAC,EAAE;EACxC;EACA,MAAMC,YAAY,GAAG,IAAIC,GAAG,CAACF,OAAO,CAACG,GAAG,CAAC,CAACF,YAAY,CAACG,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC;EAC3E,MAAMC,IAAI,GAAGJ,YAAY,CAACK,GAAG,CAAC,MAAM,CAAC,IAAI,OAAO;EAEhD,IAAID,IAAI,KAAK,OAAO,IAAIA,IAAI,KAAK,QAAQ,EAAE;IACzC,MAAMhB,IAAI,CACR;MAAEkB,OAAO,EAAE;IAAmC,CAAC,EAC/C;MAAEC,MAAM,EAAE;IAAI,CAChB,CAAC;EACH;EAEA,MAAMC,IAAI,GAAGT,OAAO,CAACU,QAAQ,CAAC,CAAC;EAC/B,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAEH,IAAI,CAACH,GAAG,CAAC,OAAO,CAAC;IACxBO,QAAQ,EAAEJ,IAAI,CAACH,GAAG,CAAC,UAAU;EAC/B,CAAC;EAED,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,wBAAwB,GAAGV,IAAI,EAAE;IAC5DW,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACT,QAAQ;EAC/B,CAAC,CAAC;AAGJ;AAAC,IAAAb,EAAA;AAAAuB,YAAA,CAAAvB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}